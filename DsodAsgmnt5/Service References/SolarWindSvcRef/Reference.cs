//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DsodAsgmnt5.SolarWindSvcRef {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SolarWindSvcRef.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/registerUser", ReplyAction="http://tempuri.org/IService1/registerUserResponse")]
        string registerUser(string username, string password, string confirmPassword, string zip, string email, string cellno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/registerUser", ReplyAction="http://tempuri.org/IService1/registerUserResponse")]
        System.Threading.Tasks.Task<string> registerUserAsync(string username, string password, string confirmPassword, string zip, string email, string cellno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/filterWebService", ReplyAction="http://tempuri.org/IService1/filterWebServiceResponse")]
        string filterWebService(string url);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/filterWebService", ReplyAction="http://tempuri.org/IService1/filterWebServiceResponse")]
        System.Threading.Tasks.Task<string> filterWebServiceAsync(string url);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/top10ContentWords", ReplyAction="http://tempuri.org/IService1/top10ContentWordsResponse")]
        string[] top10ContentWords(string url);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/top10ContentWords", ReplyAction="http://tempuri.org/IService1/top10ContentWordsResponse")]
        System.Threading.Tasks.Task<string[]> top10ContentWordsAsync(string url);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getWindEnergy", ReplyAction="http://tempuri.org/IService1/getWindEnergyResponse")]
        string getWindEnergy(decimal latitude, decimal longitude);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getWindEnergy", ReplyAction="http://tempuri.org/IService1/getWindEnergyResponse")]
        System.Threading.Tasks.Task<string> getWindEnergyAsync(decimal latitude, decimal longitude);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getSolarEnergy", ReplyAction="http://tempuri.org/IService1/getSolarEnergyResponse")]
        string getSolarEnergy(decimal latitude, decimal longitude);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getSolarEnergy", ReplyAction="http://tempuri.org/IService1/getSolarEnergyResponse")]
        System.Threading.Tasks.Task<string> getSolarEnergyAsync(decimal latitude, decimal longitude);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : DsodAsgmnt5.SolarWindSvcRef.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<DsodAsgmnt5.SolarWindSvcRef.IService1>, DsodAsgmnt5.SolarWindSvcRef.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string registerUser(string username, string password, string confirmPassword, string zip, string email, string cellno) {
            return base.Channel.registerUser(username, password, confirmPassword, zip, email, cellno);
        }
        
        public System.Threading.Tasks.Task<string> registerUserAsync(string username, string password, string confirmPassword, string zip, string email, string cellno) {
            return base.Channel.registerUserAsync(username, password, confirmPassword, zip, email, cellno);
        }
        
        public string filterWebService(string url) {
            return base.Channel.filterWebService(url);
        }
        
        public System.Threading.Tasks.Task<string> filterWebServiceAsync(string url) {
            return base.Channel.filterWebServiceAsync(url);
        }
        
        public string[] top10ContentWords(string url) {
            return base.Channel.top10ContentWords(url);
        }
        
        public System.Threading.Tasks.Task<string[]> top10ContentWordsAsync(string url) {
            return base.Channel.top10ContentWordsAsync(url);
        }
        
        public string getWindEnergy(decimal latitude, decimal longitude) {
            return base.Channel.getWindEnergy(latitude, longitude);
        }
        
        public System.Threading.Tasks.Task<string> getWindEnergyAsync(decimal latitude, decimal longitude) {
            return base.Channel.getWindEnergyAsync(latitude, longitude);
        }
        
        public string getSolarEnergy(decimal latitude, decimal longitude) {
            return base.Channel.getSolarEnergy(latitude, longitude);
        }
        
        public System.Threading.Tasks.Task<string> getSolarEnergyAsync(decimal latitude, decimal longitude) {
            return base.Channel.getSolarEnergyAsync(latitude, longitude);
        }
    }
}
